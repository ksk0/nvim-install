#!/usr/bin/zsh

SCRIPT_DIR=${0:a:h}
GLOBAL_INSTALL=0

source $SCRIPT_DIR/lib/core


#############################################
# main functions
#
exec_help(){
	cat <<-EOF

		   ${y}usage:${n}
		      install COMMAND

		   ${y}commands:${n}
		      neovim     - install latest neovim
		      register   - register neovim in "alternatives""
		      packages   - install other programs/modules (nodejs, ruby,
		                   perl, pynvim, ruby nvim, rust, ...)
					clipboard  - install/select new clipboard tool if
					             one already installed

		      all        - run all the above in single run

		   ${y}note:${n}
		      command names can be abbrevated: neo, cli, ...

	EOF

	exit
}

exec_all(){
	install_packages
	install_neovim
}

exec_neovim(){
	install_neovim
}

exec_register(){
	register_neovim
}

exec_packages(){
	install_packages
}


#############################################
# package installation functions
#
install_neovim(){
		zpackage system install  neovim-app
		zpackage system register neovim-app
}

register_neovim(){
		zpackage system register neovim-app
}

install_packages(){
	zpackage system packages-select

	local core=(core ${SELECTED_MODULES[(i)system]})
	
	local MODULES=($core ${(o)${(@k)SELECTED_MODULES}:|core})

	local module

	for module in $MODULES; do
		zpackage $module install ${=MODULE_PACKAGES[$module]}
	done

	download_installer
}

download_installer(){
	local dest_dir=$__NVIM_BRICKS/.installer
	local git_url='https://github.com/ksk0/nvim-install.git'

	[[ -d $dest_dir ]] && rm -rf $dest_dir
	mkdir -p $dest_dir

	pkg_create_modules_dir || return 1

	alert_msg "Downloading" "nvim-install repo"
	echo

	GIT_ASKPASS=true git clone --depth 1 $git_url $dest_dir >/dev/null 2>&1 &

	zprogress wait $! "Downloading"
	local retval=$?
	echo

	return $retvale
}


##############################################################################
# Show some notifications on end of install
#
parse_arguments(){

	############################################################
	# parse command options 
	#   -g 
	#   --global     - install all modulees as global ones
	#
	local ARGS

	zparseopts -E -D -A ARGS \
		g -global

	[[ ${+ARGS[-g]}       -eq 1 ]] && GLOBAL_INSTALL=1
	[[ ${+ARGS[--global]} -eq 1 ]] && GLOBAL_INSTALL=1

	local commands=(all neovim packages register)
	local cmd=(${(M)commands:#${1}*})

	[[ $#cmd -eq 0 ]] && SCRIPT_COMMAND="exec_help"
	[[ $#cmd -eq 1 ]] && SCRIPT_COMMAND="exec_$cmd"
	[[ $#cmd -gt 1 ]] && SCRIPT_COMMAND="exec_help"

	shift 2>/dev/null

	SCRIPT_ARGS=("$@")
}


# check_if_root

parse_arguments $@

$SCRIPT_COMMAND "${SCRIPT_ARGS[@]}"

pkg_notifications_show
