#!/usr/bin/zsh

NEOVIM_DOWNLOAD_URL="https://github.com/neovim/neovim/releases/latest/download"
NEOVIM_DOWNLOAD_DIR=""

system_pkg_install_neovim_app(){
	zpackage system install libfuse2 || return 1

	NEOVIM_DOWNLOAD_DIR=$(mktemp -d)

	zpackage system install neovim || return 1
	zpackage system install clipboard-app || return 1
}

system_pkg_doinstall_neovim(){
	local package=$1

	######################################################################
	# We are installing "app.image" download from "github".
	# If "neovim" has been isntalled as debian packge we
	# have to uninstall it first. We will call "zpackage"
	# "uninstall" function, which will check for presence
	# of package, and remove it if present.
	#
	zpackage system uninstall neovim

	system_pkg_download_neovim

	local src_prog=$NEOVIM_DOWNLOAD_DIR/nvim.appimage
	local dst_prog=/usr/local/bin/nvim.appimage
	local dst_link=/usr/local/bin/nvim

	local mode='oug+rx'

	sudo cp $src_prog $dst_prog
	sudo chmod $mode $dst_prog

	[[ -L $dst_link ]] || sudo ln -s $dst_prog $dst_link
}

system_pkg_version_neovim(){
	local pkg=$1
	local vtype=$2

	if [[ $vtype = "installed" ]]; then
		nvim --version 2>/dev/null |
			grep '^NVIM' |
			awk '{
				gsub(/^[^0-9]+/,"",$2)
				print  $2
			}'

	else
		system_pkg_download_neovim || return 

		local prog=$NEOVIM_DOWNLOAD_DIR/nvim.appimage

		$prog --version 2>/dev/null |
			grep '^NVIM' |
			awk '{
				gsub(/^[^0-9]+/,"",$2)
				print  $2
			}'

	fi | awk -F. '{
				major = $1
				minor = $2 * 100 + $3

				printf "%d.%d", major, minor
			}'
}

system_pkg_download_neovim(){
	local prog=$NEOVIM_DOWNLOAD_DIR/nvim.appimage

	[[ -f $prog ]] && return

	local url="$NEOVIM_DOWNLOAD_URL/nvim.appimage"
	local mode='oug+rx'

	curl -sfL -o $prog $url >&2 || return 1
	chmod $mode $prog

	return 0
}

system_pkg_postinstall_neovim(){
	system_pkg_clean_neovim
}

system_pkg_clean_neovim(){
	[[ -z $NEOVIM_DOWNLOAD_DIR ]] && return
	[[ -d $NEOVIM_DOWNLOAD_DIR ]] || return

	rm -rf $NEOVIM_DOWNLOAD_DIR

	unset NEOVIM_DOWNLOAD_DIR
}


install_neovim(){
	download_deb_pkg

 	register_neovim_app nvim vi  N
 	register_neovim_app nvim vim Y

	echo
}

download_appimage(){
	local app=nvim.appimage
	local url="$NEOVIM_DOWNLOAD_URL/$app"
	# local dest=/usr/local/bin
	local dest=/opt/nvim
	local mode='oug+rx'

	install_deb_package libfuse2
	install_deb_package curl

	local prog=$dest/nvim.appimage

	[[ -d $dest ]] || sudo mkdir $dest && sudo chmod 755 $dest
	[[ -f $prog ]] && sudo rm $prog

	alert_msg "Downloading" "neovim appImage"
	sudo curl -fL -o $prog $url
	echo

	alert_msg "Installing" "neovim appImage"
	sudo chmod $mode $prog
	sudo ln -s $prog /usr/local/bin/nvim 
}

download_deb_pkg(){
	local url="$NEOVIM_DOWNLOAD_URL/nvim-linux64.deb"
	local dest=/tmp

	install_pkg system curl

	local pkg=$dest/nvim-linux64.deb

	alert_msg "Downloading" "neovim deb package"
	echo
	sudo curl -fL -o $pkg $url
	echo

	local inst_version=$(dpkg -l neovim 2>/dev/null | grep '^i' | awk '{print $3}')
	local repo_version=$(apt show $pkg 2>/dev/null | grep '^Version:' | sed -e 's/Version: //')

	
	if [[ $inst_version = $repo_version ]]; then
		alert_box --expand "Newest version of ${r}neovim${y} already installed!"
		count_action success system neovim kept
		return
	fi

	alert_msg "Installing" "neovim deb package"

	echo
	sudo apt install $pkg
	local ret_val=$?

	count_action $ret_val system neovim install

	return $ret_val
}
