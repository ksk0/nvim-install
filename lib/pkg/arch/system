#!/usr/bin/zsh

__CORE_PACKAGES_OS=()

system_pkg_snapshot_MISSING(){
	return 

	apt list --installed 2>/dev/null |
		grep -v 'Listing...' |
		awk -F'/' '{print $1}'
}

system_pkg_version(){
	local pkg=$1
	local vtype=$2

	case $vtype in
		installed)
			pacman -Qi $pkg 2>/dev/null | grep '^Version ' | awk '{print $3}'
			;;
		repo)
			pacman -Si $pkg | grep '^Version ' | awk '{print $3}'
			;;
	esac
}

system_pkg_doinstall(){
	local width=$(tput cols)
	local result

	if [[ $width -gt 80 ]] then
		stty cols 80
	fi

	sudo_cmd pacman -S --noconfirm $1
	result=$?

	if [[ $width -gt 80 ]] then
		stty cols $width
	fi

	return $result
}

system_pkg_uninstall_MISSING(){
}

system_pkg_upgrade(){
	[[ $SYSTEM_UPGRADED -eq 1 ]] && return || SYSTEM_UPGRADED=1

	cat <<-EOF | alert_box --expand
		${n}Before installing/updating any packages system should
		${n}be upgraded. On Arch system you should do this manually, but
		${n}we can check if  any upgrade is needed.

		If you choose to do the check, package database will be synced.
	EOF

	yesno_question "Do you want to sync the package database [Y/n]:" Y

	[[ $? -eq 0 ]] && system_pkg_update

	local upgradable=($(pacman -Qu | awk '{print $1}'))

	if [[ -z $upgradable ]]; then
		alert_box --expand "No package(s) needs upgrade !!!"

		return
	fi

	local upgradable_list=()

	echo NO PACKAGES:$#upgradable

	if [[ $#upgradable -le 10 ]]; then
		upgradable_list=("${(@)upgradable}")
	else
		local extra_pkgs=$(($#upgradable - 10))
		upgradable_list=("${(@)upgradable[1,10]}")
		upgradable_list+=("...")
		upgradable_list+=("${y}and $extra_pkgs more !!!${n}")
	fi

	{
		echo "There are package(s) that need upgrade:"
		echo "-----------------------------------------"

		for package in $upgradable_list; do
			echo "${n}$package"
		done

	}  | alert_box --left --offset 3 --expand


	echo
	cat <<-EOF | alert_box --expand
		Upgrade system manualy, and run install script again!
	EOF

	local keyring=${(M)upgradable:#archlinux-keyring}

	if [[ -n $keyring ]]; then
		echo "${y}run:${n}"
		echo "  sudo pacman -Sy archlinux-keyring"
		echo "  sudo pacman -Su"
	else
		echo "${y}run:${n}"
		echo "  sudo pacman -Su"
	fi 

	echo
	echo

	exit
}

system_pkg_update(){
	local width=$(tput cols)

	alert_msg "Updating" "system package database"
	echo

	sudo_init || 1

	if [[ $width -gt 80 ]] then
		stty cols 80
	fi

	sudo_cmd pacman -Sy >/dev/null 2>&1&

	zprogress wait $! "Downloading package list"

	if [[ $width -gt 80 ]] then
		stty cols $width
	fi
}
