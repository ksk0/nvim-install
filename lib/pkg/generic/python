#!/usr/bin/zsh

__PYTHON_HOME=$__NVIM_BRICKS/python


#############################################
# python packages functions
#
python_pkg_setup(){
	[[ ${+__PYTHON_SETUP} -eq 1 ]] && return $__PYTHON_SETUP

	__PYTHON_SETUP=1

	pkg_create_modules_dir || return 1
	zpackage system install python-module || return 1
	python_pkg_install_venv || return 1

	__PYTHON_SETUP=0

	zpackage python install pip 

	__PYTHON_SETUP=$?

	return $__PYTHON_SETUP
}

python_pkg_version(){
	local pkg=$1
	local vtype=$2

	local inst_version=$(
		pip3 show $pkg 2>/dev/null |
		grep '^Version:' |
		awk '{print $2}'
	)

	if [[ $vtype = 'installed' ]]; then
		echo $inst_version
		return
	fi

	local repo_version

	if [[ -n $inst_version ]]; then
		repo_version=$(pip3 list -lo 2>/dev/null | grep -i "^${pkg} " | awk '{print $3}')

		[[ -n $repo_version ]] && echo $repo_version && return
	fi

	local cwd=$(pwd)
	local tmp_dir=$(mktemp -d)

	cd $tmp_dir
	pip3 download $pkg >/dev/null 2>&1

	local package=$(ls -1 | grep "^$pkg" | head -1)

	[[ -z $package ]] && return

	if [[ $package =~ '.tar.gz$' ]]; then
		tar --wildcards -O -zxf $package '*/PKG-INFO' |
			grep '^Version:' |
			awk '{print $2; exit}'
	elif [[ $package =~ '.whl' ]]; then
		unzip -c $package '*/METADATA' |
			grep '^Version: ' |
			awk '{print $2; exit}'
	fi


	cd $cwd
	rm -rf $tmp_dir
}

python_pkg_doinstall(){
	local package=$1
	local action=$2
	local upgrade

	[[ $action = update ]] && upgrade="--upgrade"

	pip3 install $upgrade $package
	return $?
}

python_pkg_install_venv(){
	local venv_path=$__PYTHON_HOME
	local venv_cfg=$__PYTHON_HOME/pyvenv.cfg
	local venv_lib=$__PYTHON_HOME/lib/python3
	local activate=$__PYTHON_HOME/bin/activate

	if  [[ ! -f $activate ]]; then
		alert_msg "Installing" "python virtual env"

		python3 -m venv \
		--system-site-packages $venv_path #\
		#>/dev/null 2>&1

		local retval=$?

		local version=$(
			grep -E '^version\s*=\s*' $venv_cfg |
			sed -E -e 's/^version\s*=\s*//' |
			awk -F. '{print $1 "." $2}'
		)

		[[ -L $venv_lib ]] || ln -s python${version} $venv_lib

		clear_screen 4
	fi

	[[ -z $VIRTUAL_ENV ]] && source $venv_path/bin/activate

	return 0
}

